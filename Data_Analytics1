import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score
import matplotlib.pyplot as plt

df=pd.read_csv("boston_final.csv")
df

df.head()
df.describe()
df.dtypes
df.shape
df.columns
df.isnull()
df.isnull().sum()
X = df.drop("Price", axis=1)
y = df["Price"]
print(df.dtypes)

# Drop all non-numeric columns
data_clean = df.select_dtypes(include=['object', 'int64'])

data_clean = df.drop("Location", axis=1)

# Try converting everything to numeric, ignoring errors
data_numeric = df.apply(pd.to_numeric, errors='coerce')

print(data_numeric.isnull().sum())

# Drop columns with too many missing values (e.g., >50%)
data_clean = data_numeric.dropna(axis=1, thresh=len(data_numeric) * 0.5)

data_clean = data_clean.fillna(data_clean.mean())

print(data_clean.columns)

X = data_clean.drop("Price", axis=1)
y = data_clean["Price"]

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

model = LinearRegression()
model.fit(X_train, y_train)

y_pred = model.predict(X_test)
print("MSE:", mean_squared_error(y_test, y_pred))
print("R2 Score:", r2_score(y_test, y_pred))

plt.scatter(y_test, y_pred)
plt.xlabel("Actual Prices")
plt.ylabel("Predicted Prices")
plt.title("Actual vs Predicted Home Prices")
plt.grid(True)
plt.show()

